import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as h,a as i,d as a,e as n,f as t,r as p,o as d}from"./app-B7KLoWbQ.js";const k={};function o(g,s){const e=p("RouteLink");return d(),r("div",null,[s[5]||(s[5]=h(`<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1.简介</span></a></h2><p>触发器，顾名思义就是用于判断哪个场景应该被触发执行。</p><p>一个自动战斗配置，会包含若干个拥有触发器的场景，和一个没有触发器的场景。</p><ul><li>有触发器的场景: 用于处理战斗中的突发情况，例如黄光闪避、连携换人、快速支援等。</li><li>没有触发器的场景: 用于正常连招，按当前角色判断做对应动作。</li></ul><h2 id="_2-示例讲解" tabindex="-1"><a class="header-anchor" href="#_2-示例讲解"><span>2.示例讲解</span></a></h2><details><summary>例子</summary><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scenes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">triggers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;闪避识别-黄光&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;闪避识别-红光&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;闪避识别-声音&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    handlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">triggers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;按键可用-快速支援&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    handlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">triggers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;按键可用-连携技&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    handlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">triggers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.02</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    handlers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>触发器(triggers) 是一个数组，里面的元素是字符串，每个元素是对应的可以触发这个场景的状态(state)，同一个场景可以被多个状态触发</p><p>上述是一个通用模版，基本可以在所有队伍中使用，主要分为以下场景</p><ul><li><code>[ &quot;闪避识别-黄光&quot;, &quot;闪避识别-红光&quot;, &quot;闪避识别-声音&quot; ]</code> - 需要闪避的情况，这三个通常放在一起，然后在handlers中使用状态表达式(states)再分别处理。</li><li><code>[ &quot;按键可用-快速支援&quot; ]</code> - 出现快速支援的情况，判断是否进行快速支援换人。</li><li><code>[ &quot;按键可用-连携技&quot; ]</code> - 出现连携技的情况，判断是否连携换人。</li><li><code>[ ]</code> - 普通情况，进行连招。</li></ul><h2 id="_3-工作原理" tabindex="-1"><a class="header-anchor" href="#_3-工作原理"><span>3.工作原理</span></a></h2><p>脚本识别到某个状态后，都会判断这个状态有没有用于触发器场景，如果有的话，就 <strong>尝试</strong> 去触发这个场景。</p>`,11)),i("p",null,[s[1]||(s[1]=a("至于更具体的场景处理方法说明，见 ")),n(e,{to:"/zzz/zh/auto_battle_guide/basic/basic_02_scenes.html"},{default:t(()=>s[0]||(s[0]=[a("基础-02-场景")])),_:1}),s[2]||(s[2]=a("。"))]),s[6]||(s[6]=i("h3",{id:"_3-1-1-可用状态",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_3-1-1-可用状态"},[i("span",null,"3.1.1.可用状态")])],-1)),i("p",null,[s[4]||(s[4]=a("任何脚本能识别的状态，都能用在触发器中，详情可见 ")),n(e,{to:"/zzz/zh/auto_battle_guide/basic/basic_90_states_enum.html"},{default:t(()=>s[3]||(s[3]=[a("基础-90-状态枚举")])),_:1})]),s[7]||(s[7]=i("p",null,[a("但是，对于高频识别的状态，就不建议用在触发器上，例如 "),i("code",null,"前台-强攻"),a(" 这种。")],-1))])}const m=l(k,[["render",o],["__file","basic_03_triggers.html.vue"]]),B=JSON.parse('{"path":"/zzz/zh/auto_battle_guide/basic/basic_03_triggers.html","title":"基础-03-场景下的触发器","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"基础-03-场景下的触发器","description":"1.简介 触发器，顾名思义就是用于判断哪个场景应该被触发执行。 一个自动战斗配置，会包含若干个拥有触发器的场景，和一个没有触发器的场景。 有触发器的场景: 用于处理战斗中的突发情况，例如黄光闪避、连携换人、快速支援等。 没有触发器的场景: 用于正常连招，按当前角色判断做对应动作。 2.示例讲解 例子 触发器(triggers) 是一个数组，里面的元素是...","head":[["meta",{"property":"og:url","content":"https://one-dragon.org/zzz/zh/auto_battle_guide/basic/basic_03_triggers.html"}],["meta",{"property":"og:site_name","content":"一条龙小助手"}],["meta",{"property":"og:title","content":"基础-03-场景下的触发器"}],["meta",{"property":"og:description","content":"1.简介 触发器，顾名思义就是用于判断哪个场景应该被触发执行。 一个自动战斗配置，会包含若干个拥有触发器的场景，和一个没有触发器的场景。 有触发器的场景: 用于处理战斗中的突发情况，例如黄光闪避、连携换人、快速支援等。 没有触发器的场景: 用于正常连招，按当前角色判断做对应动作。 2.示例讲解 例子 触发器(triggers) 是一个数组，里面的元素是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-09T03:51:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-09T03:51:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础-03-场景下的触发器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-09T03:51:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DoctorReid\\",\\"url\\":\\"https://one-dragon.org\\"}]}"]]},"headers":[{"level":2,"title":"1.简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2.示例讲解","slug":"_2-示例讲解","link":"#_2-示例讲解","children":[]},{"level":2,"title":"3.工作原理","slug":"_3-工作原理","link":"#_3-工作原理","children":[{"level":3,"title":"3.1.1.可用状态","slug":"_3-1-1-可用状态","link":"#_3-1-1-可用状态","children":[]}]}],"git":{"createdTime":1727680792000,"updatedTime":1728445878000,"contributors":[{"name":"DoctorReid","username":"DoctorReid","email":"doctorreid2024@outlook.com","commits":2,"url":"https://github.com/DoctorReid"}]},"readingTime":{"minutes":1.76,"words":528},"filePathRelative":"zzz/zh/auto_battle_guide/basic/basic_03_triggers.md","localizedDate":"2024年9月30日","autoDesc":true}');export{m as comp,B as data};
