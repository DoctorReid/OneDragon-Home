import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as n}from"./app-B7KLoWbQ.js";const l={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<p>本文只会介绍自动战斗中可能用到的内容，其他可以看<a href="https://www.runoob.com/w3cnote/yaml-intro.html" target="_blank" rel="noopener noreferrer">完整教程</a></p><p>如果中途有疑问，可以找 <a href="https://tongyi.aliyun.com/qianwen/" target="_blank" rel="noopener noreferrer">通义千问</a></p><h2 id="_1-对象" tabindex="-1"><a class="header-anchor" href="#_1-对象"><span>1.对象</span></a></h2><p>通常，我们把多个属性的合集，称为一个对象。</p><p>我们先来看一个简单的yml文件</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里面表示了一个人物的对象，名称(name)是DoctorReid，主页(github_homepage)是后面的地址。</p><p>也就是，我们通过 <code>属性: 值</code> 的方式取描述一个对象，一个对象中可以包含任意个属性，属性之间没有要求顺序。</p><h3 id="_1-1-值类型" tabindex="-1"><a class="header-anchor" href="#_1-1-值类型"><span>1.1.值类型</span></a></h3><p>通常，我们只需要关注两种类型</p><ul><li>文本(字符串) - 就是上述用双引号中包含的内容，<code>&quot;DoctorReid&quot;</code> 表示这是一个字符串，值是 <code>DoctorReid</code>。</li><li>数值 - 你可以先简单认为，没有双引号包含的，只有数字的内容，就是数值，例如上述的 <code>60</code>。</li></ul><h2 id="_2-数组" tabindex="-1"><a class="header-anchor" href="#_2-数组"><span>2.数组</span></a></h2><p>那如果有多个人物，又要怎么表示呢，我们看下面的例子</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;小巡夜&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/yokuminto&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以使用 <a href="https://yaml.cn/" target="_blank" rel="noopener noreferrer">本网站</a>，把上面的内容复制进入，看右方显示，可以更清晰地看到有2块内容。</p><p>这说明，我们当前有2个人物，他们分别都有3个属性。</p><h3 id="_2-1-数组元素表示方式" tabindex="-1"><a class="header-anchor" href="#_2-1-数组元素表示方式"><span>2.1.数组元素表示方式</span></a></h3><p>通过上述例子可以看到，我们是使用 横线+1个空格 <code>- </code> 来表示数组里每个对象的开始的。</p><p>对象的第一个属性，前方会有 横线+1个空格 <code>- </code>；后续属性，前方会有 2个空格 <code></code>。</p><p>这样排列后，同一个对象中的所有属性，它的起始字母，在每行的位置是一样的。</p><p>这个也叫做 缩进对齐，也就是依赖 <code>空格符号</code> 来对齐属性的位置，来表示这几个属性是属于同一个对象的。</p><p>这时候再回去看 <code>1.对象</code> 的例子，它刚好是属性都从每行最左边开始，缩进是相同的，所以是在描述同一个对象里的属性。</p><h2 id="_3-复杂的对象属性" tabindex="-1"><a class="header-anchor" href="#_3-复杂的对象属性"><span>3.复杂的对象属性</span></a></h2><p>我们继续拓展上述例子，一个对象的属性，可以是一个数组，也可以是另一个嵌套的对象。</p><p>以下例子你都可以复制到 <a href="https://yaml.cn/" target="_blank" rel="noopener noreferrer">这里</a> 观察。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">org_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;一条龙&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">members</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;小巡夜&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/yokuminto&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;脚本&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;自动化&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">other_info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://one-dragon.org/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  create_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2024-09-01&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们描述的是一个对象，可以理解成一个组织，里面有以下的属性：</p><ul><li>组织名称(org_name) : 它的值是一个字符串，等于 <code>一条龙</code></li><li>组织成员(members) : 它的值是一个数组，数组里是多个成员对象，每个成员对象包含多个属性</li><li>关键词(keywords) : 它的值是一个数组，数组里是多个字符串</li><li>其它信息(other_info) : 它的值是一个对象，里面再包含多个属性: 主页(homepage)，创建时间(create_date)</li></ul><h3 id="_3-1-缩进对齐" tabindex="-1"><a class="header-anchor" href="#_3-1-缩进对齐"><span>3.1.缩进对齐</span></a></h3><p>观察上述例子，缩进(每行前的空格)会在以下情况下出现</p><ul><li>属性的值是一个数组或者是另一个对象，我们会先加入 2个空格 <code></code>，再开始描述这个数组或者另一个对象</li><li>描述一个数组时，数组中的每一个元素，第一个属性，我们会加入 横线+1个空格 <code>- </code>，其它属性，我们会加入 2个空格 <code></code></li></ul><h3 id="_3-2-数组的另一种表示方式" tabindex="-1"><a class="header-anchor" href="#_3-2-数组的另一种表示方式"><span>3.2.数组的另一种表示方式</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;脚本&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;自动化&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以看到 keywords 这行，当我们的数组里的元素，都是字符串或者数值时，我们可用 <code>中括号</code> 来包围这些值，来表示一个数组。</p><p>当然，你也可以使用原来的结构来表示</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;脚本&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;自动化&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-复杂嵌套" tabindex="-1"><a class="header-anchor" href="#_4-复杂嵌套"><span>4.复杂嵌套</span></a></h2><p>一个属性的值，可以是一个对象2；对象2里的属性，依然可以是另一个对象3，这就可以不断嵌套来表示很复杂的关系。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">org_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;一条龙&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">members</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/DoctorReid&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    friends</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/a&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/b&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;小巡夜&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    github_homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/yokuminto&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;脚本&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;自动化&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">other_info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://one-dragon.org/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  create_date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2024-09-01&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个例子中，我们给一条龙的成员DoctorReid添加了一个 朋友(friends) 的属性，里面因为有 <code>横线(-)</code>，说明是一个数组，数组里的每个元素又再包含2个属性。</p><p>你可以复制出来观察，复杂的嵌套下，无非就是继续增加 <code>缩进(2个空格)</code>。</p><p>所以，yaml文件的格式，本质上就是管理好缩进，让内容外观好看的同时，结构化地表达内容。</p>`,42)]))}const d=s(l,[["render",t],["__file","basic_00_yaml.html.vue"]]),r=JSON.parse('{"path":"/zzz/zh/auto_battle_guide/basic/basic_00_yaml.html","title":"基础-00-Yaml格式","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"基础-00-Yaml格式","description":"本文只会介绍自动战斗中可能用到的内容，其他可以看完整教程 如果中途有疑问，可以找 通义千问 1.对象 通常，我们把多个属性的合集，称为一个对象。 我们先来看一个简单的yml文件 这里面表示了一个人物的对象，名称(name)是DoctorReid，主页(github_homepage)是后面的地址。 也就是，我们通过 属性: 值 的方式取描述一个对象，一...","head":[["meta",{"property":"og:url","content":"https://one-dragon.org/zzz/zh/auto_battle_guide/basic/basic_00_yaml.html"}],["meta",{"property":"og:site_name","content":"一条龙小助手"}],["meta",{"property":"og:title","content":"基础-00-Yaml格式"}],["meta",{"property":"og:description","content":"本文只会介绍自动战斗中可能用到的内容，其他可以看完整教程 如果中途有疑问，可以找 通义千问 1.对象 通常，我们把多个属性的合集，称为一个对象。 我们先来看一个简单的yml文件 这里面表示了一个人物的对象，名称(name)是DoctorReid，主页(github_homepage)是后面的地址。 也就是，我们通过 属性: 值 的方式取描述一个对象，一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-29T04:27:19.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-29T04:27:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础-00-Yaml格式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-29T04:27:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DoctorReid\\",\\"url\\":\\"https://one-dragon.org\\"}]}"]]},"headers":[{"level":2,"title":"1.对象","slug":"_1-对象","link":"#_1-对象","children":[{"level":3,"title":"1.1.值类型","slug":"_1-1-值类型","link":"#_1-1-值类型","children":[]}]},{"level":2,"title":"2.数组","slug":"_2-数组","link":"#_2-数组","children":[{"level":3,"title":"2.1.数组元素表示方式","slug":"_2-1-数组元素表示方式","link":"#_2-1-数组元素表示方式","children":[]}]},{"level":2,"title":"3.复杂的对象属性","slug":"_3-复杂的对象属性","link":"#_3-复杂的对象属性","children":[{"level":3,"title":"3.1.缩进对齐","slug":"_3-1-缩进对齐","link":"#_3-1-缩进对齐","children":[]},{"level":3,"title":"3.2.数组的另一种表示方式","slug":"_3-2-数组的另一种表示方式","link":"#_3-2-数组的另一种表示方式","children":[]}]},{"level":2,"title":"4.复杂嵌套","slug":"_4-复杂嵌套","link":"#_4-复杂嵌套","children":[]}],"git":{"createdTime":1727534861000,"updatedTime":1727584039000,"contributors":[{"name":"DoctorReid","username":"DoctorReid","email":"doctorreid2024@outlook.com","commits":2,"url":"https://github.com/DoctorReid"}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"zzz/zh/auto_battle_guide/basic/basic_00_yaml.md","localizedDate":"2024年9月28日","autoDesc":true}');export{d as comp,r as data};
